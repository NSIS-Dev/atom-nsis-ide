{"version":3,"sources":[".././node_modules/atom-package-deps/lib/index.js",".././src/nsis-ide.coffee","../external \"atom\"","../external \"child_process\"","../external \"fs\"","../external \"os\"","../external \"path\"","../webpack/bootstrap","../webpack/startup"],"names":["os","child_process","fs","path","_interopDefaultLegacy","e","os__default","fs__default","path__default","extractPathRegex","pathRegex","homeDir","homedir","AggregateError","Error","errors","Array","isArray","TypeError","message","map","error","Object","assign","stack","replace","cleanInternalStack","options","pretty","split","filter","line","pathMatches","match","includes","test","trim","m","p1","join","String","string","count","indent","includeEmptyLines","regex","repeat","indentString","super","this","name","defineProperty","value","Symbol","iterator","_errors","aggregateError","pMap$1","iterable","mapper","Promise","resolve","reject","concurrency","Infinity","ret","isRejected","isIterableDone","resolvingCount","currentIndex","next","nextItem","i","done","then","element","pMap_1","_default","default","pFilter","async","filterer","index","all","Boolean","pFilter_1","_default$1","IS_ATOM","atom","IS_DEV","inDevMode","inSpecMode","IGNORED_CONFIG_NAME","matchHtmlRegExp","escapeHtml_1","escape","str","exec","html","lastIndex","length","charCodeAt","substring","resolveDependencyPath$2","packageName","packages","resolvePackagePath","_process$env$ATOM_HOM","packageDirectory","process","env","ATOM_HOME","promises","access","constants","R_OK","_","invariant","condition","shouldInstallDependency","dependency","directory","minimumVersion","version","atomPackageVersion","_packageModule$metada","packageModule","getLoadedPackage","metadata","getInstalledDependencyVersion","_manifest$version","_manifest","manifest","JSON","parse","readFile","getInstalledDependencyVersion$1","getInstalledDependencyVersion$2","a","b","pa","pb","na","Number","nb","isNaN","semverCompare","INSTALL_VALID_TICKS","Set","INSTALL_VALIDATION_REGEXP","getResolvedDependency","item","console","entry","showResetInstruction","getView$2","dependencies","failed","notification","notifications","addInfo","detail","dismissable","progress","document","createElement","max","style","width","_notificationView$ele2","notificationView","views","getView","notificationElement","notificationContent","querySelector","appendChild","err","_error$stack","push","dismiss","addWarning","addSuccess","activatePackage","catch","log","exitCode","confirmPackagesToInstall$2","ungroupedDependencies","groupedDependencies","skipGroups","groupChoices","isPackageDisabled","warn","icon","description","buttons","text","onDidClick","concat","_atom$config$get2","ignoredPackages","config","get","add","set","from","markPackageAsIgnored","onDidDismiss","_notificationView$ele","innerHTML","ungroupedLine","groupLabelLine","groupedList","forEach","listItem","select","subitem","addEventListener","find","marginTop","exports","hideUserPrompt","_atom$config$get","packageDependencies","getDependencies","packageStats","stat","isDirectory","parsed","contents","getDependencies$1","subindex","invalidMessage","getDependencies$2","resolvedDependencies","dependenciesToInstall","every","chosenDependencies","dep","view","stopOnError","isSafeInteger","result","pMap","apmPath","getApmPath","stdout","stderr","command","args","spawnedProcess","promise","spawn","output","on","chunk","handleStdout","handleStderr","code","outputStdout","encoding","Buffer","outputStderr","handleChildProcess","spawnInternal","_spawnedProcess","kill","signal","shell","has","installPackage","handleDependencyInstalled","handleFailure","handleComplete","meta","buildProviders","loadedPackages","module","building","type","order","properties","defaultProvider","title","enum","toolbar","enableToolbar","showBuildTools","showFileButtons","showHistoryButtons","showClipboardButtons","showInfoButtons","manageDependencies","activate","state","CompositeDisposable","subscriptions","commands","setupPackageDeps","buildCommand","buildFile","onDidChange","newValue","oldValue","startsWith","disablePackage","enablePackage","isValue","wasValue","toggleToolbar","deactivate","autoRun","falase","v","consumeToolBar","toolBar","platform","fileManager","addButton","callback","tooltip","iconset","addSpacer","getToolBar","removeItems","confirm","detailedMessage","setTimeout","reload","isStrict","editor","workspace","getActiveTextEditor","dispatch","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"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","file":"nsis-ide.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar os = require('os');\nvar child_process = require('child_process');\nvar fs = require('fs');\nvar path = require('path');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar os__default = /*#__PURE__*/_interopDefaultLegacy(os);\nvar fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);\nvar path__default = /*#__PURE__*/_interopDefaultLegacy(path);\n\nvar indentString = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/;\nconst homeDir = typeof os__default['default'].homedir === 'undefined' ? '' : os__default['default'].homedir();\n\nvar cleanStack = (stack, options) => {\n\toptions = Object.assign({pretty: false}, options);\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (options.pretty) {\n\t\t\t\treturn line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n};\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nclass AggregateError extends Error {\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = [...errors].map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.name = 'AggregateError';\n\n\t\tObject.defineProperty(this, '_errors', {value: errors});\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const error of this._errors) {\n\t\t\tyield error;\n\t\t}\n\t}\n}\n\nvar aggregateError = AggregateError;\n\nvar pMap = async (\n\titerable,\n\tmapper,\n\t{\n\t\tconcurrency = Infinity,\n\t\tstopOnError = true\n\t} = {}\n) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (typeof mapper !== 'function') {\n\t\t\tthrow new TypeError('Mapper function is required');\n\t\t}\n\n\t\tif (!((Number.isSafeInteger(concurrency) || concurrency === Infinity) && concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be an integer from 1 and up or \\`Infinity\\`, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t\t}\n\n\t\tconst result = [];\n\t\tconst errors = [];\n\t\tconst iterator = iterable[Symbol.iterator]();\n\t\tlet isRejected = false;\n\t\tlet isIterableDone = false;\n\t\tlet resolvingCount = 0;\n\t\tlet currentIndex = 0;\n\n\t\tconst next = () => {\n\t\t\tif (isRejected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextItem = iterator.next();\n\t\t\tconst index = currentIndex;\n\t\t\tcurrentIndex++;\n\n\t\t\tif (nextItem.done) {\n\t\t\t\tisIterableDone = true;\n\n\t\t\t\tif (resolvingCount === 0) {\n\t\t\t\t\tif (!stopOnError && errors.length !== 0) {\n\t\t\t\t\t\treject(new aggregateError(errors));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolvingCount++;\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst element = await nextItem.value;\n\t\t\t\t\tresult[index] = await mapper(element, index);\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (stopOnError) {\n\t\t\t\t\t\tisRejected = true;\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push(error);\n\t\t\t\t\t\tresolvingCount--;\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t};\n\n\t\tfor (let i = 0; i < concurrency; i++) {\n\t\t\tnext();\n\n\t\t\tif (isIterableDone) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst pMap$1 = (iterable, mapper, options) => new Promise((resolve, reject) => {\n\toptions = Object.assign({\n\t\tconcurrency: Infinity\n\t}, options);\n\n\tif (typeof mapper !== 'function') {\n\t\tthrow new TypeError('Mapper function is required');\n\t}\n\n\tconst {concurrency} = options;\n\n\tif (!(typeof concurrency === 'number' && concurrency >= 1)) {\n\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t}\n\n\tconst ret = [];\n\tconst iterator = iterable[Symbol.iterator]();\n\tlet isRejected = false;\n\tlet isIterableDone = false;\n\tlet resolvingCount = 0;\n\tlet currentIndex = 0;\n\n\tconst next = () => {\n\t\tif (isRejected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItem = iterator.next();\n\t\tconst i = currentIndex;\n\t\tcurrentIndex++;\n\n\t\tif (nextItem.done) {\n\t\t\tisIterableDone = true;\n\n\t\t\tif (resolvingCount === 0) {\n\t\t\t\tresolve(ret);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolvingCount++;\n\n\t\tPromise.resolve(nextItem.value)\n\t\t\t.then(element => mapper(element, i))\n\t\t\t.then(\n\t\t\t\tvalue => {\n\t\t\t\t\tret[i] = value;\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tisRejected = true;\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\tfor (let i = 0; i < concurrency; i++) {\n\t\tnext();\n\n\t\tif (isIterableDone) {\n\t\t\tbreak;\n\t\t}\n\t}\n});\n\nvar pMap_1 = pMap$1;\n// TODO: Remove this for the next major release\nvar _default = pMap$1;\npMap_1.default = _default;\n\nconst pFilter = async (iterable, filterer, options) => {\n\tconst values = await pMap_1(\n\t\titerable,\n\t\t(element, index) => Promise.all([filterer(element, index), element]),\n\t\toptions\n\t);\n\treturn values.filter(value => Boolean(value[0])).map(value => value[1]);\n};\n\nvar pFilter_1 = pFilter;\n// TODO: Remove this for the next major release\nvar _default$1 = pFilter;\npFilter_1.default = _default$1;\n\nconst IS_ATOM = typeof atom !== 'undefined';\nconst IS_DEV = typeof atom !== 'undefined' && (atom.inDevMode() || atom.inSpecMode());\nconst IGNORED_CONFIG_NAME = 'atom-package-deps.ignored';\n\n/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nvar escapeHtml_1 = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n\nasync function spawnInternal(command, args, options) {\n    const spawnedProcess = child_process.spawn(command, args, options);\n    const promise = new Promise((resolve, reject) => {\n        const output = {\n            stdout: spawnedProcess.stdout ? [] : null,\n            stderr: spawnedProcess.stderr ? [] : null,\n        };\n        spawnedProcess.on('error', reject);\n        if (spawnedProcess.stdout) {\n            spawnedProcess.stdout.on('data', function (chunk) {\n                output.stdout.push(chunk);\n                if (options.handleStdout) {\n                    options.handleStdout(chunk);\n                }\n            });\n        }\n        if (spawnedProcess.stderr) {\n            spawnedProcess.stderr.on('data', function (chunk) {\n                output.stderr.push(chunk);\n                if (options.handleStderr) {\n                    options.handleStderr(chunk);\n                }\n            });\n        }\n        spawnedProcess.on('close', code => {\n            let outputStdout = null;\n            if (output.stdout != null) {\n                outputStdout =\n                    options.encoding === null || options.encoding === 'buffer'\n                        ? Buffer.concat(output.stdout)\n                        : output.stdout.join('');\n            }\n            let outputStderr = null;\n            if (output.stderr != null) {\n                outputStderr =\n                    options.encoding === null || options.encoding === 'buffer'\n                        ? Buffer.concat(output.stderr)\n                        : output.stderr.join('');\n            }\n            resolve({\n                exitCode: code,\n                stdout: outputStdout,\n                stderr: outputStderr,\n            });\n        });\n    });\n    options.handleChildProcess(spawnedProcess);\n    return promise;\n}\nfunction spawn(command, args, options) {\n    let spawnedProcess;\n    const promise = spawnInternal(command, args, {\n        ...options,\n        handleChildProcess(_spawnedProcess) {\n            spawnedProcess = _spawnedProcess;\n        },\n    });\n    promise.kill = function (signal) {\n        // TODO: kill all subprocesses on windows with wmic?\n        return spawnedProcess.kill(signal);\n    };\n    return promise;\n}\n\nvar semverCompare = function cmp (a, b) {\n    var pa = a.split('.');\n    var pb = b.split('.');\n    for (var i = 0; i < 3; i++) {\n        var na = Number(pa[i]);\n        var nb = Number(pb[i]);\n        if (na > nb) return 1;\n        if (nb > na) return -1;\n        if (!isNaN(na) && isNaN(nb)) return 1;\n        if (isNaN(na) && !isNaN(nb)) return -1;\n    }\n    return 0;\n};\n\nasync function getDependencies(packageName) {\n  const packageModule = atom.packages.getLoadedPackage(packageName);\n  const packageDependencies = packageModule && packageModule.metadata['package-deps'];\n  return Array.isArray(packageDependencies) ? packageDependencies : [];\n}\nasync function resolveDependencyPath(packageName) {\n  return atom.packages.resolvePackagePath(packageName);\n}\nasync function getInstalledDependencyVersion(dependency) {\n  var _packageModule$metada;\n\n  const packageModule = atom.packages.getLoadedPackage(dependency.name);\n  return packageModule == null ? null : (_packageModule$metada = packageModule.metadata.version) !== null && _packageModule$metada !== void 0 ? _packageModule$metada : null;\n}\n\nasync function getDependencies$1(packageName) {\n  let packageStats = null;\n\n  try {\n    packageStats = await fs__default['default'].promises.stat(packageName);\n  } catch (_) {// No Op\n  }\n\n  if (packageStats == null || !packageStats.isDirectory()) {\n    throw new Error(`[Package-Deps] Expected packageName to be a readable directory in Node.js invocation`);\n  }\n\n  let parsed = null;\n\n  try {\n    const contents = await fs__default['default'].promises.readFile(path__default['default'].join(packageName, 'package.json'), 'utf8');\n    parsed = JSON.parse(contents);\n  } catch (_) {// Ignore JSON read errors and such\n  }\n\n  const packageDependencies = parsed == null || typeof parsed !== 'object' ? [] : parsed['package-deps'];\n  return Array.isArray(packageDependencies) ? packageDependencies : [];\n}\nasync function resolveDependencyPath$1(packageName) {\n  var _process$env$ATOM_HOM;\n\n  const packageDirectory = path__default['default'].join((_process$env$ATOM_HOM = process.env.ATOM_HOME) !== null && _process$env$ATOM_HOM !== void 0 ? _process$env$ATOM_HOM : path__default['default'].join(os__default['default'].homedir(), '.atom'), 'packages', packageName);\n\n  try {\n    await fs__default['default'].promises.access(packageDirectory, fs__default['default'].constants.R_OK);\n    return packageDirectory;\n  } catch (_) {\n    return null;\n  }\n}\nasync function getInstalledDependencyVersion$1(dependency) {\n  var _manifest$version, _manifest;\n\n  const {\n    directory\n  } = dependency;\n\n  if (directory == null) {\n    // Not possible to get version without resolved directory in Node.js version\n    return null;\n  }\n\n  let manifest = null;\n\n  try {\n    manifest = JSON.parse(await fs__default['default'].promises.readFile(path__default['default'].join(directory, 'package.json'), 'utf8'));\n  } catch (_) {\n    return null;\n  }\n\n  return (_manifest$version = (_manifest = manifest) === null || _manifest === void 0 ? void 0 : _manifest.version) !== null && _manifest$version !== void 0 ? _manifest$version : null;\n}\n\n/**\n * Internal helpers\n */\n\nasync function getInstalledDependencyVersion$2(dependency) {\n  if (IS_ATOM) {\n    const atomPackageVersion = await getInstalledDependencyVersion(dependency);\n\n    if (atomPackageVersion) {\n      return atomPackageVersion;\n    } // If the package isn't activated, it won't be loaded, so fallback to reading manifest file instead\n\n  }\n\n  return getInstalledDependencyVersion$1(dependency);\n}\n/**\n * Exported helpers\n */\n\n\nconst resolveDependencyPath$2 = IS_ATOM ? resolveDependencyPath : resolveDependencyPath$1;\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message !== null && message !== void 0 ? message : 'Invariant violation');\n  }\n}\nasync function getDependencies$2(name) {\n  const dependencies = await (IS_ATOM ? getDependencies(name) : getDependencies$1(name));\n\n  if (IS_DEV) {\n    invariant(Array.isArray(dependencies), `Dependencies for ${name} are not a valid array`);\n    dependencies.forEach((item, index) => {\n      if (Array.isArray(item)) {\n        item.forEach((subitem, subindex) => {\n          const invalidMessage = `Dependency#${index}#${subindex} for ${name} is invalid`;\n          invariant(typeof subitem.name === 'string' && subitem.name.length > 0, invalidMessage);\n          invariant(subitem.minimumVersion == null || typeof subitem.minimumVersion === 'string' && subitem.minimumVersion.length > 0, invalidMessage);\n        });\n        invariant(item.length > 0, `Dependency#${index} for ${name} has no group items`);\n      } else {\n        const invalidMessage = `Dependency#${index} for ${name} is invalid`;\n        invariant(typeof item.name === 'string' && item.name.length > 0, invalidMessage);\n        invariant(item.minimumVersion == null || typeof item.minimumVersion === 'string' && item.minimumVersion.length > 0, invalidMessage);\n      }\n    });\n  }\n\n  return dependencies;\n}\nasync function shouldInstallDependency(dependency) {\n  if (dependency.directory == null) {\n    // Not installed, so install\n    return true;\n  }\n\n  if (dependency.minimumVersion == null) {\n    // Already installed and no version defined, so skip\n    return false;\n  }\n\n  const version = await getInstalledDependencyVersion$2(dependency);\n\n  if (version == null) {\n    // Unable to get current version, so install\n    return true;\n  }\n\n  return semverCompare(dependency.minimumVersion, version) === 1;\n}\nfunction isPackageIgnored(name) {\n  var _atom$config$get;\n\n  if (!IS_ATOM) {\n    // Never ignored in CLI\n    return false;\n  }\n\n  const ignoredPackages = (_atom$config$get = atom.config.get(IGNORED_CONFIG_NAME)) !== null && _atom$config$get !== void 0 ? _atom$config$get : [];\n\n  if (ignoredPackages.includes(name)) {\n    return true;\n  }\n\n  return false;\n}\nfunction markPackageAsIgnored(name) {\n  var _atom$config$get2;\n\n  if (!IS_ATOM) {\n    // No op in CLI\n    return;\n  }\n\n  const ignoredPackages = new Set((_atom$config$get2 = atom.config.get(IGNORED_CONFIG_NAME)) !== null && _atom$config$get2 !== void 0 ? _atom$config$get2 : []);\n  ignoredPackages.add(name);\n  atom.config.set(IGNORED_CONFIG_NAME, Array.from(ignoredPackages));\n}\nconst INSTALL_VALID_TICKS = new Set(['✓', 'done']);\nconst INSTALL_VALIDATION_REGEXP = /(?:Installing|Moving) (.*?) to .* (.*)/; // Example success output: Uninstalling linter-ui-default ✓\n\nasync function installPackage(dependency) {\n  const apmPath = IS_ATOM ? `\"${atom.packages.getApmPath()}\"` : 'apm';\n  const {\n    stdout,\n    stderr\n  } = await spawn(apmPath, ['install', dependency.name, '--production', '--color', 'false'], {\n    shell: true\n  });\n  const match = INSTALL_VALIDATION_REGEXP.exec(stdout.trim());\n\n  if (match != null && INSTALL_VALID_TICKS.has(match[2])) {\n    // Installation complete and verified\n    return;\n  }\n\n  const error = new Error(`Error installing dependency: ${dependency.name}`);\n  error.stack = stderr.trim();\n  throw error;\n}\nasync function getResolvedDependency(item) {\n  // string entry\n  if (typeof item === 'string') {\n    return {\n      name: item,\n      directory: await resolveDependencyPath$2(item)\n    };\n  }\n\n  if ('name' in item) {\n    return { ...item,\n      directory: await resolveDependencyPath$2(item.name)\n    };\n  }\n\n  console.error(`This package-deps entry is not valid. Please see https://github.com/steelbrain/package-deps#how-it-works`, {\n    entry: item\n  });\n  throw Error(`The package-deps entry is not valid. Please see https://github.com/steelbrain/package-deps#how-it-works`);\n}\n\nlet showResetInstruction = true;\nfunction confirmPackagesToInstall({\n  packageName,\n  dependencies\n}) {\n  return new Promise(resolve => {\n    const ungroupedDependencies = dependencies.filter(item => !Array.isArray(item));\n    const groupedDependencies = dependencies.filter(item => Array.isArray(item));\n    const skipGroups = groupedDependencies.length === 0;\n    const detail = skipGroups ? ungroupedDependencies.map(item => item.name).join(', ') : 'Something went wrong. Check your developer console';\n    const groupChoices = groupedDependencies.map(item => item[0]); // If Atom \"notifications\" package is disabled output a warning in case no other notifications package is installed.\n\n    if (atom.packages.isPackageDisabled('notifications')) {\n      console.warn(`Enable notifications to install dependencies for ${packageName}`);\n    }\n\n    const notification = atom.notifications.addInfo(`${packageName} needs to install dependencies`, {\n      dismissable: true,\n      icon: 'cloud-download',\n      detail,\n      description: `Install dependenc${dependencies.length === 1 ? 'y' : 'ies'}?`,\n      buttons: [{\n        text: 'Yes',\n        onDidClick: () => {\n          if (skipGroups) {\n            resolve([]);\n          } else {\n            resolve(ungroupedDependencies.concat(groupChoices));\n          }\n\n          notification.dismiss();\n        }\n      }, {\n        text: 'No Thanks',\n        onDidClick: () => {\n          notification.dismiss();\n        }\n      }, {\n        text: 'Never',\n        onDidClick: () => {\n          markPackageAsIgnored(packageName);\n\n          if (showResetInstruction) {\n            showResetInstruction = false;\n            atom.notifications.addInfo('How to reset package-deps memory', {\n              dismissable: true,\n              description: \"To modify the list of ignored files invoke 'Application: Open Your Config' and change the 'atom-package-deps' section\"\n            });\n          }\n\n          notification.dismiss();\n        }\n      }]\n    });\n    notification.onDidDismiss(() => resolve([]));\n\n    if (skipGroups) {\n      return;\n    } // Handle groups\n\n\n    try {\n      var _notificationView$ele;\n\n      const notificationView = atom.views.getView(notification);\n      const notificationElement = (_notificationView$ele = notificationView === null || notificationView === void 0 ? void 0 : notificationView.element) !== null && _notificationView$ele !== void 0 ? _notificationView$ele : null;\n\n      if (notificationElement == null) {\n        throw new Error('Unable to get notification element from view');\n      }\n\n      const notificationContent = notificationElement.querySelector('.detail-content');\n\n      if (notificationContent == null) {\n        throw new Error('Content detail container not found inside the notification');\n      } // Clear the contents and add some skel\n\n\n      notificationContent.innerHTML = ''; // Add list of ungroup dependencies to the top of the notification\n\n      if (ungroupedDependencies.length > 0) {\n        const ungroupedLine = document.createElement('div');\n        ungroupedLine.innerHTML = `Packages without choices: <br /><ul><li>${ungroupedDependencies.map(item => escapeHtml_1(item.name)).join('</li><li>')}</li></ul>`;\n        notificationContent.appendChild(ungroupedLine);\n      } // Create a label line for groups\n\n\n      const groupLabelLine = document.createElement('div');\n      groupLabelLine.innerHTML = `Packages with choices:`;\n      notificationContent.appendChild(groupLabelLine); // Create one line per group with a select inside\n\n      const groupedList = document.createElement('ul');\n      groupedDependencies.forEach((item, index) => {\n        const listItem = document.createElement('li');\n        const select = document.createElement('select');\n        select.innerHTML = item.map(subitem => `<option>${escapeHtml_1(subitem.name)}</option>`).join('\\n');\n        select.addEventListener('change', () => {\n          // Change the selected value for this index for resolve to use\n          const subitem = item.find(entry => entry.name === select.value);\n\n          if (subitem != null) {\n            groupChoices[index] = subitem;\n          }\n        });\n        listItem.style.marginTop = '5px';\n        listItem.appendChild(select);\n        groupedList.appendChild(listItem);\n      });\n      notificationContent.appendChild(groupedList);\n    } catch (err) {\n      console.error('[Package-Deps] Error during showing package choices to user', err);\n    }\n  });\n}\nfunction getView({\n  packageName,\n  dependencies\n}) {\n  const failed = [];\n  const notification = atom.notifications.addInfo(`Installing ${packageName} dependencies`, {\n    detail: `Installing ${dependencies.map(item => item.name).join(', ')}`,\n    dismissable: true\n  });\n  const progress = document.createElement('progress');\n  progress.max = dependencies.length;\n  progress.style.width = '100%';\n\n  try {\n    var _notificationView$ele2;\n\n    const notificationView = atom.views.getView(notification);\n    const notificationElement = (_notificationView$ele2 = notificationView === null || notificationView === void 0 ? void 0 : notificationView.element) !== null && _notificationView$ele2 !== void 0 ? _notificationView$ele2 : null;\n\n    if (notificationElement == null) {\n      throw new Error('Unable to get notification element from view');\n    }\n\n    const notificationContent = notificationElement.querySelector('.detail-content');\n\n    if (notificationContent == null) {\n      throw new Error('Content detail container not found inside the notification');\n    }\n\n    notificationContent.appendChild(progress);\n  } catch (err) {\n    console.error('[Package-Deps] Error during showing installation progress to user', err);\n  }\n\n  return {\n    handleFailure({\n      dependency,\n      error\n    }) {\n      var _error$stack;\n\n      failed.push(dependency.name);\n      progress.value += 1;\n      console.error(`[Package-Deps] Unable to install ${dependency.name}, Error:`, (_error$stack = error === null || error === void 0 ? void 0 : error.stack) !== null && _error$stack !== void 0 ? _error$stack : error);\n    },\n\n    handleDependencyInstalled(dependency) {\n      progress.value += 1;\n    },\n\n    handleComplete() {\n      notification.dismiss();\n\n      if (failed.length > 0) {\n        atom.notifications.addWarning(`Failed to install ${packageName} dependencies`, {\n          detail: `These packages were not installed, check your console\\nfor more info.\\n${failed.join('\\n')}`,\n          dismissable: true\n        });\n      } else {\n        atom.notifications.addSuccess(`Installed ${packageName} dependencies`, {\n          detail: `Installed ${dependencies.map(item => item.name).join(', ')}`\n        });\n      }\n\n      Promise.all(dependencies.map(item => {\n        if (!failed.includes(item.name)) {\n          return atom.packages.activatePackage(item.name);\n        }\n\n        return null;\n      })).catch(err => {\n        console.error(`[Package-Deps] Error activating installed packages for ${packageName}`, err);\n      });\n    }\n\n  };\n}\n\nasync function confirmPackagesToInstall$1({\n  dependencies\n}) {\n  // No user interaction on the CLI. Install the first (aka \"default\" choice) package\n  return dependencies.map(item => Array.isArray(item) ? item[0] : item);\n}\nfunction getView$1({\n  dependencies\n}) {\n  let failed = false;\n  console.log(`Installing dependencies:\\n${dependencies.map(item => `  - ${item.name}`).join('\\n')}`);\n  return {\n    handleFailure({\n      dependency,\n      error\n    }) {\n      var _error$stack;\n\n      failed = true;\n      console.error(`Unable to install ${dependency.name}, Error:`, (_error$stack = error === null || error === void 0 ? void 0 : error.stack) !== null && _error$stack !== void 0 ? _error$stack : error);\n    },\n\n    handleDependencyInstalled(dependency) {\n      console.log('Successfully installed', dependency.name);\n    },\n\n    handleComplete() {\n      console.log('Installation complete');\n\n      if (failed) {\n        // Fail the invocation\n        process.exitCode = 1;\n      }\n    }\n\n  };\n}\n\nconst getView$2 = IS_ATOM ? getView : getView$1;\nconst confirmPackagesToInstall$2 = IS_ATOM ? confirmPackagesToInstall : confirmPackagesToInstall$1;\n\nasync function install(packageName, hideUserPrompt = false) {\n  invariant(typeof packageName === 'string' && packageName.length > 0, '[Package-Deps] Package name is required');\n\n  if (isPackageIgnored(packageName)) {\n    // User ignored this package\n    return;\n  } // Get list of relevant dependencies\n\n\n  const dependencies = await getDependencies$2(packageName);\n\n  if (dependencies.length === 0) {\n    // Short-circuit\n    return;\n  } // Resolve directories of relevant dependencies\n\n\n  const resolvedDependencies = await Promise.all(dependencies.map(async item => {\n    if (Array.isArray(item)) {\n      return Promise.all(item.map(getResolvedDependency));\n    }\n\n    return getResolvedDependency(item);\n  })); // Filter out already installed, in range dependencies\n  // If one dependency from a group is already installed, whole group is ignored\n\n  const dependenciesToInstall = await pFilter_1(resolvedDependencies, async function (item) {\n    if (Array.isArray(item)) {\n      return (await Promise.all(item.map(subitem => shouldInstallDependency(subitem)))).every(Boolean);\n    }\n\n    return shouldInstallDependency(item);\n  });\n\n  if (dependenciesToInstall.length === 0) {\n    // Short-circuit if all have been skipped\n    return;\n  }\n\n  let chosenDependencies;\n\n  if (!hideUserPrompt) {\n    chosenDependencies = await confirmPackagesToInstall$2({\n      packageName,\n      dependencies: dependenciesToInstall\n    });\n  } else {\n    // prompt-less installation\n    chosenDependencies = dependenciesToInstall.map(dep => {\n      if (Array.isArray(dep)) {\n        return dep[0];\n      }\n\n      return dep;\n    });\n  }\n\n  if (chosenDependencies.length === 0) {\n    // Short-circuit if user interaction cancelled all\n    return;\n  }\n\n  const view = getView$2({\n    packageName,\n    dependencies: chosenDependencies\n  });\n  await pMap(chosenDependencies, async function (dependency) {\n    try {\n      await installPackage(dependency);\n      view.handleDependencyInstalled(dependency);\n    } catch (err) {\n      view.handleFailure({\n        dependency,\n        error: err\n      });\n    }\n  }, {\n    concurrency: 2\n  });\n  view.handleComplete();\n}\n\nexports.install = install;\n","meta = require \"../package.json\"\n\nbuildProviders = [ \"(default)\" ]\nbuildProviders.push \"build-makensis\" if atom.packages.loadedPackages[\"build-makensis\"]\nbuildProviders.push \"build-makensis-wine\" if atom.packages.loadedPackages[\"build-makensis-wine\"]\nbuildProviders.push \"script\" if atom.packages.loadedPackages[\"script\"]\n\nmodule.exports =\n  config:\n    building:\n      type: \"object\"\n      order: 1\n      properties:\n        defaultProvider:\n          title: \"Default Provider\"\n          description: \"Choose your default build provider for `makensis`\"\n          type: \"string\"\n          enum: buildProviders\n          default: \"(default)\"\n    toolbar:\n      type: \"object\"\n      order: 2\n      properties:\n        enableToolbar:\n          title: \"Enable toolbar\"\n          description: \"Displays a toolbar with useful NSIS actions, can be tweaked in the Toolbar settings below\"\n          order: 1\n          type: \"boolean\"\n          default: true\n        showBuildTools:\n          title: \"Show Build Tools\"\n          description: \"Displays buttons to build NSIS scripts\"\n          type: \"boolean\"\n          default: true\n          order: 2\n        showFileButtons:\n          title: \"Show File Tools\"\n          description: \"Displays buttons for `Load` / `Save`\"\n          type: \"boolean\"\n          default: true\n          order: 3\n        showHistoryButtons:\n          title: \"Show History Tools\"\n          description: \"Displays buttons for `Undo` / `Redo`\"\n          type: \"boolean\"\n          default: true\n          order: 4\n        showClipboardButtons:\n          title: \"Show Clipboard Tools\"\n          description: \"Displays buttons for `Cut` / `Copy` / `Paste`\"\n          type: \"boolean\"\n          default: false\n          order: 5\n        showInfoButtons:\n          title: \"Show Info Tools\"\n          description: \"Displays buttons to show `makensis` version and to reveal file\"\n          type: \"boolean\"\n          default: true\n          order: 6\n    manageDependencies:\n      title: \"Manage Dependencies\"\n      description: \"When enabled, third-party dependencies will be installed automatically\"\n      type: \"boolean\"\n      default: true\n      order: 3\n\n  activate: (state) ->\n    {CompositeDisposable} = require \"atom\"\n\n    # Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\n    @subscriptions = new CompositeDisposable\n\n    # Register commands\n    @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS-IDE:setup-package-dependencies\": => @setupPackageDeps()\n    if atom.config.get(\"#{meta.name}.toolbar.enableToolbar\") and atom.config.get(\"#{meta.name}.toolbar.showBuildTools\")\n      @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS-IDE:compile\": => @buildCommand(false)\n      @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS-IDE:compile-strict\": => @buildCommand(true)\n      @subscriptions.add atom.commands.add \"atom-workspace\", \"NSIS-IDE:create-build-file\": => @buildFile()\n\n    # Using build-makensis-* will disable linter plug-in to avoid conflicts\n    atom.config.onDidChange \"#{meta.name}.building.defaultProvider\", ({newValue, oldValue}) ->\n      if newValue.startsWith \"build-makensis\"\n        atom.notifications.addInfo(\"**#{meta.name}**: Disabling `linter-makensis` package\", dismissable: false)\n        return atom.packages.disablePackage \"linter-makensis\"\n\n      atom.notifications.addInfo(\"**#{meta.name}**: Enabling `linter-makensis` package\", dismissable: false)\n      atom.packages.enablePackage \"linter-makensis\"\n\n    atom.config.onDidChange \"#{meta.name}.toolbar.enableToolbar\", ({isValue, wasValue}) => @toggleToolbar(isValue)\n\n    @setupPackageDeps(true) if atom.config.get(\"#{meta.name}.manageDependencies\")\n\n  deactivate: ->\n    if toolBar\n      toolBar.removeItems()\n      toolBar = null\n\n  setupPackageDeps: (autoRun = falase) ->\n    require(\"atom-package-deps\").install(meta.name)\n\n    for k, v of meta[\"package-deps\"]\n      if atom.packages.isPackageDisabled(v)\n        console.log \"Enabling package '#{v}'\" if atom.inDevMode()\n        atom.packages.enablePackage(v)\n\n  consumeToolBar: (toolBar) ->\n    {platform} = require \"os\"\n    unless atom.config.get(\"#{meta.name}.toolbar.enableToolbar\")\n      return\n\n    @toolBar = toolBar \"#{meta.name}\"\n\n    switch platform()\n      when \"win32\"\n        fileManager = \"Explorer\"\n      when \"darwin\"\n        fileManager = \"Finder\"\n      else\n        fileManager = \"file manager\"\n\n    if atom.config.get(\"#{meta.name}.toolbar.showBuildTools\")\n      @toolBar.addButton\n        icon: \"check\"\n        callback: \"NSIS-IDE:compile\"\n        tooltip: \"Compile\"\n        iconset: \"fa\"\n\n      @toolBar.addButton\n        icon: \"check-double\"\n        callback: \"NSIS-IDE:compile-strict\"\n        tooltip: \"Compile and stop at warnings\"\n        iconset: \"fa\"\n\n      if atom.packages.loadedPackages[\"language-nsis\"]\n        @toolBar.addButton\n          icon: \"plus-square\"\n          callback: \"NSIS-IDE:create-build-file\"\n          tooltip: \"Create build file\"\n          iconset: \"fa\"\n\n      @toolBar.addSpacer()\n\n    if atom.config.get(\"#{meta.name}.toolbar.showFileButtons\")\n      @toolBar.addButton\n        icon: \"folder-open\"\n        callback: \"application:open\"\n        tooltip: \"Open\"\n        iconset: \"fa\"\n\n      @toolBar.addButton\n        icon: \"save\"\n        callback: \"core:save\"\n        tooltip: \"Save\"\n        iconset: \"fa\"\n\n      @toolBar.addSpacer()\n\n    if atom.config.get(\"#{meta.name}.toolbar.showHistoryButtons\")\n      @toolBar.addButton\n        icon: \"angle-left\"\n        callback: \"core:undo\"\n        tooltip: \"Undo\"\n        iconset: \"fa\"\n\n      @toolBar.addButton\n        icon: \"angle-right\"\n        callback: \"core:redo\"\n        tooltip: \"Redo\"\n        iconset: \"fa\"\n\n      @toolBar.addSpacer()\n\n    if atom.config.get(\"#{meta.name}.toolbar.showClipboardButtons\")\n      @toolBar.addButton\n        icon: \"scissors\"\n        callback: \"core:cut\"\n        tooltip: \"Cut\"\n        iconset: \"fa\"\n\n      @toolBar.addButton\n        icon: \"clone\"\n        callback: \"core:copy\"\n        tooltip: \"Copy\"\n        iconset: \"fa\"\n\n      @toolBar.addButton\n        icon: \"clipboard\"\n        callback: \"core:paste\"\n        tooltip: \"Paste\"\n        iconset: \"fa\"\n\n      @toolBar.addSpacer()\n\n    if atom.config.get(\"#{meta.name}.toolbar.showInfoButtons\")\n      if atom.packages.loadedPackages[\"browse\"]\n        @toolBar.addButton\n          icon: \"eye\"\n          callback: \"browse:reveal-file\"\n          tooltip: \"Show in #{fileManager}\"\n          iconset: \"fa\"\n\n      if atom.packages.loadedPackages[\"language-nsis\"]\n        @toolBar.addButton\n          icon: \"sliders-h\"\n          callback: \"NSIS:open-package-settings\"\n          tooltip: \"Open Settings\"\n          iconset: \"fa\"\n\n        @toolBar.addButton\n          icon: \"book\"\n          callback: \"NSIS:command-reference\"\n          tooltip: \"Look up command online\"\n          iconset: \"fa\"\n\n        @toolBar.addButton\n          icon: \"info-circle\"\n          callback: \"NSIS:show-version\"\n          tooltip: \"Show makensis version\"\n          iconset: \"fa\"\n\n        @toolBar.addButton\n          icon: \"flag-checkered\"\n          callback: \"NSIS:show-compiler-flags\"\n          tooltip: \"Show compiler flags\"\n          iconset: \"fa\"\n\n        @toolBar.addSpacer()\n\n  toggleToolbar: (getToolBar) ->\n    if @toolBar\n      @toolBar.removeItems()\n      @toolBar = null\n    else\n      atom.confirm\n        message: \"nsis-ide\"\n        detailedMessage: \"Modifying the toolbar requires a reload of the Atom window. It is recommend to save your work before reloading.\"\n        buttons:\n          \"Reload now\": ->\n            # Room for improvment?\n            setTimeout ->\n              atom.reload()\n            , 300\n          \"Cancel\": ->\n            return\n\n  buildCommand: (isStrict) ->\n    editor = atom.workspace.getActiveTextEditor()\n    return atom.notifications.addWarning(\"**#{meta.name}**: No active editor\", dismissable: false) unless editor?\n\n    defaultProvider = atom.config.get(\"#{meta.name}.building.defaultProvider\")\n\n    if defaultProvider is \"build-makensis\" and atom.packages.loadedPackages[\"build-makensis\"]\n      buildCommand = if isStrict then \"MakeNSIS:compile-and-stop-at-warning\" else \"MakeNSIS:compile\"\n    else if defaultProvider is \"build-makensis-wine\" and atom.packages.loadedPackages[\"build-makensis-wine\"]\n      buildCommand = if isStrict then \"MakeNSIS-on-wine:compile-and-stop-at-warning\" else \"MakeNSIS-on-wine:compile\"\n    else if defaultProvider is \"script\" and atom.packages.loadedPackages[\"script\"]\n      buildCommand = \"script:run\"\n    else\n      buildCommand = if isStrict then \"NSIS:compile-strict\" else \"NSIS:compile\"\n\n    atom.commands.dispatch atom.views.getView(editor), buildCommand\n\n  buildFile: () ->\n    editor = atom.workspace.getActiveTextEditor()\n    return atom.notifications.addWarning(\"**#{meta.name}**: No active editor\", dismissable: false) unless editor?\n\n    defaultProvider = atom.config.get(\"#{meta.name}.building.defaultProvider\")\n\n    if defaultProvider is \"build-makensis-wine\" and atom.packages.loadedPackages[\"build-makensis-wine\"]\n      buildFile = \"NSIS:create-.atom–build-file-for-wine\"\n    else\n      buildFile = \"NSIS:create-.atom–build-file\"\n\n    atom.commands.dispatch atom.views.getView(editor), buildFile\n","module.exports = require(\"atom\");;","module.exports = require(\"child_process\");;","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(62);\n"],"sourceRoot":""}